数据库与ORM

很多人在大学都学过数据库，喜欢用那些第一范式，第二范式 ... 第X范式，来指导表设计。

这些设计思想充满了形式上的优雅和数学上的美感，不过正如一位低调的前辈大牛所说：

“
学者要干的事情和工业界的街上混的程序员们干的事情完全不同，解决方案自然也完全两样。拿学术大师的话去指导工业开发，是要吃大亏的 ...
”

好吧，先把那些范式忘了吧，欢迎回到现实世界。







数据表 索引表


洪强宁


CREATE DATABASE wtree CHARACTER SET utf8 COLLATE utf8_bin;

表小 数据切片



提示：使用UTF8时为了节省空间，使用VARCHAR而不要用CHAR。否则，MySQL必须为一个CHAR(10) CHARACTER SET utf8列预备30个字节，因为这是可能的最大长度。

column1 VARCHAR(5) CHARACTER SET latin1 COLLATE latin1_german1_ci


MySQL官方文档 page:other/learn_html_css.chm

用户表 用户身份 管理员 企业 个人








    * 确保表表示单个主题:                 类似面向对象的单职责原则，一个对象一个职责。
    * 确保每个表都有一个主键：         主键唯一的标识了表中的每条记录；它还用来建立表之间的关系。
    * 确保字段只包含一个单独的值：   一个字段只表示一个内容。
    * 确保表中没有需要计算的字段
    (减少计算 容忍冗余)
    
现在，一个结构良好的表算是设计好了，现在我们可以把单个Employee和任意多个Committee关联起来，也可以把单个Committee和任意多个Employee关联起来。而且，可以使用一条SQL语句来同时查看来自所有这3个表的信息。
