WSGI 架网站

麻油四喜欢花花草草。

没有花花草草喜欢他。

群芳丛中过，片叶不沾身。

人常道：没有谈过恋爱的大学，是不完整的。

生命如此短暂而宝贵，麻油四不想留下遗憾。

一点儿遗憾也不想要。

某日，他和同样孑然一身的阿牛对酒言愁。

说着说着，阿牛提议：“来写个学校的交友网站吧，广结天下良缘，也算是一种善事。”

“好啊，好啊”，麻油四终于不胜酒力，醉卧沙场。

-------------------------------

麻油四深深地吸了口清晨的空气，从他枕边发现了阿牛留下的字条和小册子。

字条上只有八个字：“看懂册子 过来找我”。

又是一本破旧的小册子，封面上写着“Python写网站入门 作者：阿牛”，麻油四翻看了起来。

学Python ，三天就可以上手了。（Python教程 page:other/python25_man.pdf ）

Google、Yahoo、YouTube、NASA(美国航空航天局)、FriendFeed、豆瓣、网易游戏、搜狐邮箱，都是Python的忠实用户。

而用Python写网站，选择非常丰富。常见的有：

Zope，早期的Python框架，著名的Plone内容管理系统（CMS）基于其开发，和Java类似，Zope也有一套自成体系的服务器，数据库。

Quixote，也是一个早期的Python框架，豆瓣网（douban.com）基于其开发，它的起源是因为用Zope写的代码难以维护和调试。

Django，当下最流行的Python框架，玩聚网（ju690.com），好看簿（haokanbu.com）基于其开发，它能自动生成一套后台管理的界面，很适合用于快速完成小项目。

Pylons，由各种Python库整合而成的框架，reddit.com基于其开发，可定制性好。

web.py，非常轻量级的一个Python框架，sohu邮箱基于其开发，它也常用于嵌入式设备。

还有一些比较特别的框架，比如

Facebook（FriendFeed部门）发布的Tornado http://www.tornadoweb.org/

IBM(Second Life部门）发布的Mulib http://wiki.secondlife.com/wiki/Mulib

国人沈崴的Eurasia http://code.google.com/p/eurasia/

这三款框架共同的特点是支持大量并发的连接，写网页游戏，网页聊天室不妨考虑一下它们。

事实上，用Python按照自己的需求，搭建一个框架是非常轻松的事情，以至于有篇文章教你用3个小时，60行代码编写一个垃圾框架（http://code.google.com/p/robaccia/ ，robaccia，意大利语的垃圾）。  

好吧，还是先从环境配置开始。首先，安装Python。

安装完Python2.6后，下载 http://peak.telecommunity.com/dist/ez_setup.py 双击运行，这样就安装了Python的包管理。

然后在我的电脑上右键点击 --> 属性 --> 高级 --> 环境变量 -- 系统变量 -- Path -- 双击出现编辑框 
--> 在已经内容的结尾加上 ;C:\Python26\Scripts;C:\Python26\;  --> 点击确定
--> 点击环境变量页面的确定


开始 --> 运行 --> 输入 cmd --> 输入
{{{
easy_install -U mypy
}}}

就可以安装我们用到的网站开发框架mypy -- 一个在WSGI基础上搭建起来简单框架。

WSGI是Python框架和Web服务器之间的一种接口，简单易扩展，符合Python的哲学 -- Pythonic 。

此外，还需要安装MySQL-Python，用于连接MySQL数据库。

MySQL-Python迟迟没有发布Python2.6的官方Windows编译版，所以从 http://www.codegood.com/archives/4  下载非官方编译的Python2.6版的MySQL-Python page:other/mysql_python_1.2.3c1.win32-py2.6.exe  安装。 

先看看怎么用框架写代码 -- 首先，新建一个项目。

{{{
python -m mypy.cmd new ppmm
}}}

这里ppmm便是项目名称。在生成的ppmm目录下，可以看到有三个python文件：

{{{
init_app.py
dev_server.py
simple_server.py
}}}

init_app.py 用于初始化网站。
simple_server.py,是一个简单的纯Python服务器，默认端口是9888。
dev_server.py 是开发用的服务器，当修改网站中Python文件时，会自动重启，默认端口是9889。

运行dev_server.py，访问 http://127.0.0.1:9889 ，就可以看到默认的提示页面了。

其他的目录结构如下
{{{
myconf
myfile
mylib
mysite
}}}

myconf，配置文件所在的路径；myfile，静态文件所在路径；mylib，库文件所在路径。

mysite 中为网站代码，其中又有四个目录：
{{{
ctrl
model
htm
util
}}}

    
ctrl，control的缩写，这里写页面相关的逻辑。
model，放置操作数据库的后台逻辑代码。
htm，用于网页模板。
util，一些公用的函数，比如分页。

