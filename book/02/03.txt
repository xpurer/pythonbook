版本管理

麻油四在学院中名气渐起，偶尔也有低年级的小弟前来投靠，拜师学艺。

本着抓苦力来打杂，不用白不用的心态，麻油四来者不拒。

麻油四给每人开了个Linux账号，让他们用Ftp软件Filezilla连到服务器，然后又手把手的教会他们怎么上传下载代码。

在麻油四勤勤恳恳的调教下，小弟们虽然依然很笨拙，不过慢慢也能干点体力活了。

但是，今天，发生了一起让麻油四很恼火的事情。

一个新来的小弟居然在上传代码时不小心选择了覆盖模式。

结果麻油四和他的马仔们辛苦两天的成果就这样灰飞烟灭。

“麻叔很生气，后果很严重”

结果那个倒霉的小弟就被活生生的吊在宿舍楼下的老槐树上示众。

午夜子时，阿牛迈着疲惫的脚步，从网吧走回寝室。

隐隐约约，他看到树上有一个人影。

阿牛不由得想起恐怖故事《女生寝室》中那个树吃人的典故，不由得惊出一身冷汗。

不过，转念一想，难道是有MM失恋了自寻短见？

活了20多年都没碰过女孩手的阿牛，脑海里浮现出人工呼吸，英雄救美，一见倾情的美好画面。

顿时阿牛变得豪气干云，三步并做两步冲上前去。

... ... ...

-----------------

第二日，阳光明媚。

麻油四，心情却很沉重。

那个新来的小弟不知怎么结识了阿牛。

自己在小弟面前苦心精英的高手形象被阿牛贬的一文不值。

不过，倒是听说了一个满新奇的新名词 -- “版本管理”。

万事不决问Google。

麻油很快搜索到一段文字：“

1.版本管理是什么，有什么用？

照相，能帮我们记录下那些美好的旧时光。

版本管理，就是好像对文件照相。

有了版本管理，我们就可以轻而易举的“Yesterday , Once More”（注：昨日重现，一首经典英文歌曲）

另外，写代码，很多时候并不是一个人在战斗。

这时候，就需要常常同步各自的改动。

复制来复制去，麻烦不说，还经常一不小心，就把已有的改动覆盖掉。

而有了版本管理，无痛同步，是那么的写意自然。

2.有哪些版本管理工具，各有什么特点。

现在最流行的当属SVN了，古老一点的还有CVS。

SVN和CVS属于中央集权式，都有一个至高无上的存在 -- 服务器。

用他们管理每一份代码，都需要从服务器复制出来（又称 check out）。

同样每一行改动也必须提交到服务器（又称check in）。

与此相对，还存在另外一套版本管理方式，俗称分布式版本管理。

每个拷贝，都既可以做服务器，也可以当客户端。

彼此之间，人人平等。

它们的代表有Git，Hg。

至于是集权好，还是平等好，这则是一个仁者见仁，智者见智的问题了。
”。

读到这里，麻油四觉得版本控制是一个好东西。

他觉得应该用这现代化的装备来武装他那帮马仔，不过，怎么用版本控制呢？

他接着往下看：“

Google Code可以免费托管开源项目，集成wiki，code review，bug trace。

”

麻油四心想，就是它了，反正那些代码也没什么可保密的。

也没顾得及弄清这些词语的含义，就开始摸索去申请一个项目了。

三下五除二，登录Google。

搜索“ Google Code ”，找到了申请的链接

http://code.google.com/hosting/createProject

打开网页，需要填写一些项目信息，版本管理系统选择svn。

Google Code注册 gcode_reg.jpg

Google Code初始目录 gcode_dir.jpg

搞定Google Code的申请，还缺一个客户端。

他听说最好用的客户端Tortoise Svn ,摸索到 http://tortoisesvn.net/downloads ，下载了软件和汉化包。

下载Tortoise Svn svn_down.jpg

先安装软件，一路Next，安装完成后会提示你重启电脑，先选择No。

然后按照汉化包，装好后再在点击右键，进入Tortoise Svn的setting页面。

点击右键 svn_setting.jpg

选择语言为中文，然后重新启动。

选择语言 svn_cn.jpg

在点击右键，选择导出，在输入项目的svn地址

svn导出 svn_co.jpg

点击确定后会提示输入用户名和密码，用户名是Google帐号，密码可以在http://code.google.com/hosting/settings页面中找到。输入密码的时候可以选择保存授权，这样下次操作的时候不用重新输入密码。

2.提交代码需要将要提交的文件放入代码存放目录，点击右键，选择svn update，在窗口上面的消息输入框输入这次改动的内容描述，在窗口下面的改变文件列表中选择要提交的文件，点击确定。文件就被提交了。

3.查看当前改动，有两种方法，一种是在上面提到的update窗口，在改变的文件列表中双击文件可以看到文件的变动，另外一种方法是，点击右键，进入Tortoisesvn目录，点击check for modificatoin，可以看到所有的改动。
”

麻油四想着，先把他的简历传上去试试。
-------------

另外，同时介绍linux下的用法，以及用途（发布网站）
switch merge

这个需要构造一个场景，以便于理解

-------------

最后讲讲怎么用google code看每天谁改了什么

再讲讲 
果然，点击创建之后，就完成了。他马上点击Source->Browser，看到服务器上有三个目录：branches，tags，trunk。google之后，他知道了trunk是主干分支，最新的代码应该应该待在这儿，branches是分支，阶段性或试验性的代码应该在这儿，等到稳定以后再合并到trunk中，tags一般用来发布项目的某个正式版本。麻油知道他现在所有的代码应该都放在trunk中。
