http://www.ibm.com/developerworks/cn/web/wa-htmlcss/?S_TACT=105AGX52&S_CMP=tec-ccid

40种XHTML页面布局页面地址 http://www.bjnahan.net/special/XHTML/20060323/index.html


http://blog.html.it/layoutgala/

960 Grid System 基本使用实例
css   2009-08-13 08:43   阅读8   评论0  
字号： 大大  中中  小小

首先，你需要学习关于”如何让框架工作”。你可以通过自己的尝试来学习，不过我仍然会在这里为大家进行讲解，那就开始吧。

不要编辑960.css

先说一点需要注意的:不要编辑960.css文件，如果你修改了它，那么你今后将无法更新这个框架。

读取网格

在我们使用外部文件中的CSS代码之前，首先要在我们的HTML文件中调用它们。像这样调用:

    <link rel=”stylesheet” type=”text/css” media=”all” href=”path/to/960/reset.css” />
    <link rel=”stylesheet” type=”text/css” media=”all” href=”path/to/960/960.css” />
    <link rel=”stylesheet” type=”text/css” media=”all” href=”path/to/960/text.css” />

当我们调用好它们以后，我们要调用自己的CSS文件了。例如，你也许会将你的CSS文件命名为style.css或site.css或者其它什么的。这样调用它:

    <link rel=”stylesheet” type=”text/css” media=”all” href=”path/to/style.css” />

Containers(容器)

在960框架中，你可以选择两种类名为.container_12 和 .container_16的容器。这两种容器都是960px的宽度(这就是为什么叫做960 grid),但他们的不同之处是它们包含不同数量的列。顾名思义，.container_12的容器被分为12列，而 .container_16被分为16列。这两种960px宽的容器都是水平居中的。
Grids (网格)/ Columns(列)

你可以选择很多种不同的列宽组合，不过在这两种容器中是有所不同的。你可以通过打开960.css来了解这些宽度，但这对于设计一个网站并没有什么必要。在这里暴风彬彬将一个很有用的技巧让你使用框架更加容易。

例如:如果你想在你的容器中仅使用两列(分别是主内容区/侧边栏)，你可以这样做:

    <div class=”container_12″>
    <div class=”grid_4″>sidebar</div>
    <div class=”grid_8″>main content</div>
    </div>

看到上面的代码你也许已经明白，不过我还是要讲一下。也就是说你在container_12这个容器中使用了grid_4和grid_8两列，4+8恰好等于12！明白了吗？使用网格系统的好处之一就是你不用去计算没列的宽度到底是多少，省去了很多运算。

下面让我们看看如何编写四列布局:

    <div class=”container_12″>
    <div class=”grid_2″>sidebar</div>
    <div class=”grid_6″>main content</div>
    <div class=”grid_2″>photo’s</div>
    <div class=”grid_2″>advertisement</div>
    </div>

正如你看到的，这个系统工作得很好。如果你尝试使用你的浏览器读取他的话，你会发现有一些不对劲的地方。不过不要紧，那正是我们下一个话题要讨论的。
Margins

默认情况下，每列之间都会存在一些margin。每个grid_(这里插入数值)类都有10px的左margin和右margin。也就是说两列之间的margin值是20px。

20px的margin能让布局保持应有的留白并看上去更平滑，这也是我喜欢960 grid System的原因之一。

在上面的例子中，我们将它使用浏览器读取时出现了一些问题，现在我们来修复它。

问题在于每个列都包含左margin和右margin，但是最左面的列不应该有左margin，最右面的列不应该有右margin。(够罗嗦！)下面是解决方法:

    <div class=”container_12″>
    <div class=”grid_2 alpha”>sidebar</div>
    <div class=”grid_6″>main content</div>
    <div class=”grid_2″>photo’s</div>
    <div class=”grid_2 omega”>advertisement</div>
    </div>

你仅需添加alpha类来去除左margin，添加omega类去除右margin。好了，现在我们的布局已经可以完美在浏览器中对齐了。(是的，包括IE6)
Styling(添加样式)

事实上，你已经掌握了如何使用960框架创建基本的网格布局了。不过你也许还想为自己的布局添加一些样式。

    <div class=”container_12″>
    <div id=”sidebar” class=”grid_2 alpha”>sidebar</div>
    <div id=”content” class=”grid_6″>main content</div>
    <div id=”photos” class=”grid_2″>photo’s</div>
    <div id=”advertisements” class=”grid_2 omega”>advertisement</div>
    </div>

由于CSS使用优先级的形式来觉得如何解释样式，而id要比class的优先级高。这样我们就可以在我们的独立CSS文件中以id选择符创建个性化的样式了。如果凑巧有的样式属性与960相同但值又不同，浏览器会优先选择你的CSS文件中的样式。当然，如果您感兴趣，也可以看看上面的实例添加样式后的实际效果。
我们做到了

这是这样！你已经掌握的如何使用960网格系统来创建兼容所有浏览器的布局。当你完全掌握熟练960系统之后，你会发现它为你节省了很多很多编写CSS的时间。

















https://www.google.com/analytics/settings/?et=reset&hl=zh-cn

Douban_陈寅(C/编译器): 热炕头主义者
张沈鹏: ...
写完一章


Douban_陈寅: ...不是一节？


张沈鹏: 一节
你开始写mako没有？


Sent at 11:24 PM on Tuesday
Douban_陈寅: 没有....
我要写啥


张沈鹏: 自己想


Douban_陈寅: 把那个简历搞成mako生成的？


张沈鹏: mako基本用法
不是


Douban_陈寅: 你不是要搞场景的吗....


张沈鹏: 第三章的 动态网站初步
大背景是
开始写一个给全校学生用的简历展示的平台
细节自己构思吧
不要太单调。。。
语言要风趣
http://www.makotemplates.org/
mako用法可以参考它的文档
缓存什么的可以先不讲
你先构想一下知识点 吧


Sent at 11:28 PM on Tuesday
Douban_陈寅: 又是知识点...
就每个人提交一些信息，然后用麻油四的模板生成个人简历
这单调吗...


张沈鹏: 当然要先有知识点 后又大纲 然后剧情细节 最后写文章
恩 你可以玩丰富一点啊
比如可以选皮肤
什么的


Douban_陈寅: 我就这点想象力...
我都不会做皮肤


张沈鹏: 这样顺便可以讲讲 数据与表现的分离
。。。


Douban_陈寅: 这章都我写啊
我要规划一章？


张沈鹏: 类似wordpresss的换皮肤
不
你就写mako这一小节
01. WSGI 架网站
02. Mako模板
03. 数据库与ORM
04. 用户注册
05. 上传头像


Douban_陈寅: 一节你还要搞上皮肤...


张沈鹏: 那好 你先讲简单用法
扯扯MVC的概念


Douban_陈寅: http的post你讲了吗
这也在mako里面???


张沈鹏: 什么post？
form？


Douban_陈寅: 对啊，要post数据啊


张沈鹏: 04. 用户注册


Douban_陈寅: 我突然上来直接post啊


张沈鹏: 04. 用户注册 这里将这个
先讲讲基本的mako用法


Douban_陈寅: 那要例子吗


张沈鹏: 当然


Douban_陈寅: 不post，写啥模板


张沈鹏: 。。。
类似美工给你的html。。。
比如 共用的头部
比如 页面的模块化
等等


Douban_陈寅: 那还要降到继承啊
讲


张沈鹏: MVC的理论 也可以在这一节讲讲
当然啊
先细化知识点吧


Sent at 11:34 PM on Tuesday
Douban_陈寅: MVC，mako基本语法，控制结构，函数，继承，过滤器，网页模块化


张沈鹏: 还应该有一个技巧用法
我来写吧


Douban_陈寅: 有啥技巧


张沈鹏: 就是豆瓣 base模板中title那部分有一个技巧
wrap


Douban_陈寅: 不知道...


张沈鹏: 还应该提及一下各大模板


Douban_陈寅: 啥各大模块


张沈鹏: 由其是2种理念


Douban_陈寅: 哦，一种是编译型，一种是解释型是吧


张沈鹏: mako django tenjin 等等
不是

genshi


Douban_陈寅: jinja genshi mako这三种最流行


张沈鹏: 恩 就这3中


Douban_陈寅: genshi是kid的继承
mako是myghty的继承


张沈鹏: django也要提一下


Douban_陈寅: jinja是django模板的改进


张沈鹏: 不过还是用django的人多
tenjin 也可以提及一下
毕竟他是最快的
http://www.kuwata-lab.com/tenjin/


Douban_陈寅: 我都没用过


张沈鹏: 看一眼 提一下


Douban_陈寅: 还不是只能去网上抄几句...


张沈鹏: 看看用法
http://www.kuwata-lab.com/tenjin/pytenjin-examples.html
扫一遍


Douban_陈寅: tenjin真山寨


张沈鹏: 。。。
#endfor
这个endfor用的真巧妙
tenjin就是ptl的网页版本
这样吧
分3个流派


Douban_陈寅: 没看出来..


张沈鹏: tenjin ，ptl 是 python代码中写网页
django那些是网页归网页，python归python
mako是中庸之道
tenjin ，ptl 最快
django那些比较慢
mako中庸和谐
pyTenjin 就是ptl的网页版本
基本是python代码


Sent at 11:57 PM on Tuesday
Douban_陈寅: 留着你写


张沈鹏: 好吧
。。。
一气化三清
“一气化三清”最早出自许仲琳著的《封神演义》,写的是太上老君与通天教主斗法时,太上老君用一气化出三个法身的故事。
从这里延伸为3个流派
左派 右派 骑墙派
对应到3中风格的模板


Douban_陈寅: 技术书籍有被封杀的吗


张沈鹏: 有吧


Douban_陈寅: 左派 右派 骑墙派
这听着挺政治的


张沈鹏: 这个是唯物辩证法
囧
你还考过研
背过政治
这是我党的辩证法
都不记得了
辩证法的基本特点是认为：斗争与联合相联结。这个思想也是辩证法作为方法论的基本思想.形而上学基本特点是认为：斗争与联合相脱离。它或者只见斗争，不见联合，或者只见联合，不见斗争。
一气是联合 三清是斗争


Douban_陈寅: 。。。


张沈鹏: 联合中有斗争 斗争中有联合
这就是python的模板

 


张沈鹏: 不要迷恋爷，爷只是一个传说

那个神一般的男子
 衰神

　田思思笑了，道：“想不到做和尚也像做官一样，还要分那么多阶级。”
　　秦歌道：“人本来就应该有阶级。”
　　田思思道：“但我却认为每个人都应该是同样平等的，否则就不公平。”
　　秦歌道：“好，我问你，一个人若是又笨又懒，一天到晚除了吃饭睡觉外，什
么事都不做，他会变成个什么样的人？”
　　田思思道：“要饭的。”
　　秦歌道：“还有另外一个人，又勤俭，又聪明，又肯上进，他是不是也会做要
饭的？”
　　田思思道：“当然不会。”
　　秦歌道：“为什么有人做要饭的？有人活得很舒服呢？”
　　田思思道：“因为有的人笨，有的人聪明，勤快，有的人懒。”
　　秦歌道：“这样子是不是很公平？”
　　田思思释然道：“很公平。”
　　秦歌道：“人，是不是应该有阶级？”
　　田思思道：“是。”
　　秦歌道：“每个人站着的地方，本来都是平等的，只看你肯不肯往上爬，你若
站在那里乘风凉，看着别人爬得满头大汗，等别人爬上去之后，再说这世界上不平
等、不公平，那才是真正的不公平。”

　　　　陈雷似有些享受战术总监的优越感，也不急着让大家开始，而是两排队伍前面渡着步，一边笑呵呵地说话：“大家都快适应了这种团队配合的训练了吧？我看你们的眼神都很坚定，我想一定是适应了，所以这一次我将严格地按照训练规程办事。先跟大家说明一下，免得有人哭鼻子时，还嘴里嘀嘀咕咕的。”说到后面几句时，陈雷虽然语气还非常的温和，但骨子里已经有些阴寒的味道了，听在队员们的耳中，尤其如此，只觉陈雷此时，简直就是比恶魔还恶魔，连一向莫测高深的陈仓翼及总是带着明媚笑意的曾小雅，都一个脸色发白，一个瞪圆眼睛地直咬下唇。
　　而陈雷那种背着个手，学老大人的那种渡步的官僚姿态，在这个时候，根本没有人去管，但若是平时，谁能忍受？只怕立马有人会说：“恶心、变态、真受不了等等言词了。”
　　风继续地吹，陈雷的话都有些飘忽的味道：“大家都不说话，是不是都默认了？”
　　没人向恶魔队长提出抗议，大家都紧紧地闭着嘴巴，因为在很早很早以前他们就觉悟了。提意见？那是找死，足够被这队长用山一样的大道理压死。　　“那好吧，既然大家斗志昂扬地做好了装备，我们的游戏开始了，预备——”


　阳台上，罗琳那耀眼的银色长发，在晚风之中丝丝缕缕的飘动，遮去了她半边粉嫩的白里透红的脸靥，她静静地看着楼下的街景，似乎完全忽视了一边的陈雷。
　　陈雷也不管她会不会听自己说话，他也眼看着前方缓缓地道：“罗琳，妳有梦想吗？从小我就有一个梦想，梦想自己成为一名绝顶的大剑师，穿上高雅雪白的剑师袍，配上世上最珍贵的名剑。梦想当我骑着神兽，不管在哪，从大街上走过的时候，所有看到我的人，全部都是景仰的目光。”
　　罗琳脸上浮现厌恶的神色，眉毛微皱，难道他就是想说这些？
　　但听陈雷继续道：“具体的说来，其实我的梦想也不是一成不变的，太高远的梦想显得有些不切实际，所以，在生活中，我又有一些更接近自己能力的梦想，我梦想自己很快能够有一匹神俊的坐骑，也梦想有足够的金币，在这个城市里，去购买一座幽静高级的花园住宅，还梦想在学院里，能够渐露头角，让别人都知道我陈雷的名字。也一直梦想我的剑术能够达到前面不远的境界……因为这些比较具体的梦想，我的生活因此充满了激情，我也极力地想用自己的双手去完成这一系列的梦想。所以，梦想是我生活激情的源泉，有时候，我们感觉这些梦想是那样的低俗，但是妳能否认牠们的重要性是吗？妳是不是认真地去思考过关于自己有没有梦想，以及梦想本事这个问题呢？罗琳，我现在再问妳，妳有梦想吗？妳现在最想的又什么？我是说那种比较具体，也比较容易实现的梦想。”
　　罗琳呆住了，第一次地用异样的目光看向陈雷，却见身边的少年根本没看自己，而是痴痴地看着远方。
　　罗琳只觉忽然间心里好像被什么刺痛了一下，是啊，她有梦想吗？
　　她不是想亲自己参与伟大的复仇进程吗？不是想在父皇与母后面前，都高傲地抬起头来，让他们明白，她绝不是一个无用的花瓶公主？
　　可是正像陈雷说的那样，那些梦想太高远了，感觉离自己是那么的遥远，不是说要放弃那些梦想，而是在现实中，那些梦想都根本不可能是一时半会就能办到的。
　　那么，除了那些高远的梦想之外，她有像陈雷那样具体的梦想吗？
　　罗琳所以发呆，就是因为她忽然发现，自己居然真的没有像陈雷说的那样的具体的梦想，她什么都不缺，特别最近看到什么都很烦，感到生活是那样的茫然，难道就是因为心里没有那样的具体的梦想？
　　“罗琳，欢迎妳加入我们的团队。”叫着罗琳的名字，当女孩转过脸来看他时，陈雷淡淡地一笑，又道：“只要妳真心的加入我们，妳会发现，妳将拥有一个大家共同的梦想，到时候，妳也会有我们内心一样的共同的激情，让我们一起像天空中的雄鹰，尽情的飞翔……”





而地位当然是要靠人去争取的，如果都不去争取，又如何能得到公众的认同。而芸芸众生，又有几个是有自我主见的？大多只会看到那些光芒耀眼的人物，哪会去注意那些不喜欢出名，默默无闻的人？再说他们想看也看不到啊。


　　而陈雷其实也挺高兴的，坐在金色的大厅之中，又在公主的身边，差点让他得意忘形了，他自然没想到自己也有这样的风光，但陈雷看了一眼芙娜的那些卫兵，心里又忽然有一丝警觉，暗暗发誓，就算有机会，也绝不做这样的公主坐吃饭，自己却只能站在一边挨饿的卫士。
　　哪怕是给他很高的爵位和薪金，他也不干。


　　而其实陈雷这个提议，有优点也有缺点，优点是在小队之中，第一次埋下了一根利益的扭带，不说有人说过，没有永远的朋友，只有永远的利益，事实上，共同的利益才是把大家牢牢地锁在一条战船上的最佳元素。
　　另外，看似交队费是队员的一种支出，似乎站在队员的角度上说，那根本不存在什么利益，当然，其实问题不是这么看的，交纳队费，这就是一种利益匀分的前奏，而只有大家的付出与收获，都比较合理的情况下，才能避免未来的内部矛盾和冲突。
　　而这个提议的缺点，也很明显，表面上利益分的太清楚了，肯定会影响到私人之间的感情，别人也会说，这是一群因为利益才组合到一起的人。但事实上是不是这样呢？那就是仁者见仁，智者见智的事情了。
　　



　　花错从小就希望他的掌中能够握有一柄无坚不摧天下无双的快刀。
　　花错最错的就是这一点，因为世上根本就没有一把这么样的刀。
　　——“无敌”这两个字根本就不存在，那只不过是某些自大狂妄的人，心里的一种幻
觉，他们迟早都必将死在自己的这种幻觉中。
　　花错也不例外。
　　他拼命要去找这根本不存在的刀，不辞辛劳，不择手段，不顾一切。
　　在江湖中他得罪过的人，甚至已经不比想跟他上床的女人少。
　　因梦是在“雪村”认得他的，雪村是一大片美透了的庭园，也是花雪夫人无数产业中之
一。
　　花雪夫人当然就是花错的干妈。
　　她曾经警告过因梦：“我喜欢你，你是个迷死人的小女孩，可是我劝你现在还是赶快走
的好。”


让人惊讶的 Erlang-Web
August 20th, 2009 :: jackyz
No comments

Erlang-Web 并不是一个“新”项目，它的出现已经有一阵子了(第一次的公布是在 2008 年的 11 月)。一直以来，因为并没有太多的机会去实际使用 Erlang 来写“传统” MVC 的 Web 程序(了解我的人都知道，我一直在鼓吹采用激进的纯客户端的 JavaScript 的 MVC 来做 Web 开发)，所以并没有去真正了解它的特性。这种状况一直持续到最近，一个偶然的原因，需要做一点传统的 Web 开发，这才有机会回头再来审视众多的服务端 MVC Web 开发技术，并有机会认识 Erlang-Web 的强大。

对于一个全新的传统 Web 项目而言(通常这意味着内容要对搜索引擎友好、URL Friendly、有节制的使用 Ajax 等等需求)，对于服务端开发框架的考察无非就是需要关注如下这么几个方面：

首要考虑的是编码的“效率”，在这个坐标上，通常都是认为 Ruby On Rails 和 Python Django 之类的“Full Stack Web Framework”具有较高的得分。大量的默认习惯性配置，代码模版，等等，借助这些设施，通常较少的实际编码就能得到相当不错的成果。

然而，这类 Full Stack 框架通常“水比较深”，也就是说，它什么都提供了，但是有点“过了头”。稍微有点“另类”的想法通常容易导致痛苦。在这个坐标上，反而会希望框架再“谦逊一点”，毕竟只是一个 MVC 设施，简洁明了和可裁减也很重要。越简单的越好改，对熟手而言，用起来更能随心所欲。

再然后就是省时省力上的考量，和美工的流程配合、上传下载、URL Mapping、拦截设施、Email模块、与其他系统的接口，等等，该有的都要有，不该有的有了也好，不强买强卖就行。简而言之，能用较少的“脑力”来完成任务，就是上上大吉。

于是，我惊讶的发现自己在越来越多的关注 PHP 之类的技术(其中的一些确实是很不错的选择)。但要知道，对我个人而言，使用这门语言大约是在 9 年以前。这时我才想起曾经听过 Erlang-Web 的大名。没准怎么样呢，大不了回去再用 PHP ，先看看再说。我们了解一下它的特性：

    * Annotations —— 支持“区分主要任务和外围事务”的设施，帮助清晰和重用代码。
    * Architecture of types —— 类型系统，并用这一类型系统来对应界面。
    * Dispatching and Reverse dispatching —— 从 Friendly URL 映射到程序，及其反向功能——生成 Friendly URL。
    * Validation —— 校验用户输入。
    * Internationalization —— 传说中的 i18n 支持。
    * Request dictionary —— 在其他 MVC 中被传来传去的，什么都往里扔的 Request Object 的对应物。
    * DBMS —— 数据库支持，目前只支持 Mnesia 和 CouchDB (太 Erlang 了一点，要是能支持 MySQL ，就算是做做样子也好，胜在够有亲和力呀)。
    * Project configuration file —— 组织配置文件的设施。
    * Data flow —— 处理默认值，格式化参数等等的设施。
    * Template engines —— 模版引擎，目前支持 wtpl 和 Django 的 dtl 模版语言。
    * 其他 —— 一些有意思的组件，如 twitterl, wpart_rss, ew_backup, wpart_erlsyntax, e_auth, e_auth_dets 名字都很简约，可以直接望文生意。

配上 Erlang 内置的分布式和高并发特性，再加上 Mnesia 的诸多优势，看起来还是有一些亮点吧。当然了，特性并不完美，而且学习曲线很可能还有一点“陡峭”。但对于一个处于活跃开发周期中的项目而言，这应该不是什么大问题。长久以来流行在 Erlang 社区的这个说法——“Erlang 并不适合开发 Web 项目”——现在是不是时候改变了呢？ ;) 