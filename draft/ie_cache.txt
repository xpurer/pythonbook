
加速blog：设置浏览器缓存
zhiqiang12月 1, 2007 IT技术

在用户浏览blog的不同页面时，很多内容是重复的，比如相同的javascript，css，背景图片等。如果我们能够建议甚至强制浏览器在本地缓存这些文件，将大大降低页面产生的流量，从而降低页面载入时间。

根据服务器端的响应header（怎么看HTTP Header），一个文件对浏览器而言，有几级不同的缓存状态。

   1. 服务器端告诉浏览器不要缓存此文件，每次都到服务器上更新文件。
   2. 服务器端没有给浏览器任何指示（此时我也不知道这时候浏览器将会怎么做），这种情况多为动态脚本（比如PHP）产生的文件。
   3. 在上次传输中，服务器给浏览器发送了Last-Modified或Etag数据，再次浏览时浏览器将提交这些数据到服务器，验证本地版本是否最新的，如果为最新的则服务器返回304代码，告诉浏览器直接使用本地版本，否则下载新版本。一般来说，有且只有静态文件，服务器端才会给出这些数据。
   4. 服务器强制要求浏览器缓存文件，并设置了过期时间。在缓存未到期之前，浏览器将直接使用本地缓存文件，不会与服务器端产生任何通信。

我们要做的是尽量强制浏览器到第四种状态，特别是对于javascript, css和图片等变动较少的文件。

对于PHP产生的动态内容，只需要在内容输出之前输出强制缓存的header即可，比如下面的代码即要求浏览器缓存文件1个月：

    <?php
      header("Cache-Control: public");
      header("Pragma: cache");

      $offset = 1000*60*60*24; // cache 1 year
      $ExpStr = "Expires: ".gmdate("D, d M Y H:i:s", time() + $offset)." GMT";
      header($ExpStr);
    ?>

对于静态文件，一般的服务器都支持第3级缓存状态。要想达到第四级的缓存效果，要么像之前GZIP压缩那样，用PHP外包一层，然后用PHP处理。要么需要服务器端的支持，APACHE的一个模块mod_expires支持给文件添加expires header。把下面的代码加入你的blog目录下的.htaccess文件，如果你的服务器安装了mod_expires模块，则将自动生效，图片等强制缓存一个月，html文档缓存10分钟。如果该模块没有安装，也不会出错。

    <IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/gif A2592000
    ExpiresByType image/jpeg A2592000
    ExpiresByType image/png A2592000
    ExpiresByType application/x-shockwave-flash A2592000
    ExpiresByType text/css A2592000
    ExpiresByType application/x-javascript A2592000
    ExpiresByType text/html A600
    </IfModule>

在这里有mod_expires更详细的文档和教程。不过我要说明的是，mod_expires在绝大多数服务器上都没安装 :( ，因为虽然这个模块包含在Apache的发行版里，但并不是默认安装模块。





Cache-Control: max-age=120
Expires: Sun, 30 Aug 2009 15:27:50 GMT

Cache-Control: max-age=15552000

   由于我做的是登录,也就是用户登录每次登陆时都要来访问服务器，不需要在客户机做缓存，于是在网上找了找，发下一下文章不错于是传了上来。
      网页的缓存是由HTTP消息头中的“Cache-control”来控制的，常见的取值有private、no-cache、max-age、must-revalidate等，默认为private。其作用根据不同的重新浏览方式分为以下几种情况：

（1） 打开新窗口
    值为private、no-cache、must-revalidate，那么打开新窗口访问时都会重新访问服务器。
而如果指定了max-age值，那么在此值内的时间里就不会重新访问服务器，例如：
Cache-control: max-age=5(表示当访问此网页后的5秒内再次访问不会去服务器)





2009年7月17日 ... Expires 表示存在时间，允许客户端在这个时间之前不去检查（发请求），等同max-age的效果。但是如果同时存在，则被Cache-Control的max-age覆盖。 ...




《高性能网站建设指南》笔记3
2009年1月9日
没有评论
使用内容发布网络CDN

如果应用程序web服务器离用户更近，则一个HTTP请求的响应时间将缩短。另一方面，如果组件的web服务器离用户更近，则多个HTTP请求的响应时间将缩短。
内容发布网络CDN（Content Delivery Network)是一组分布在多个不提那个地理位置的web服务器，用于更多有效地向用户发布内容。

在设计web页面的时候，首次访问的响应时间并不是唯一需要考虑的。对于一个用户经常使用的网站，用户会进行很多的HTTP请求，但通过使用一个长久的Expires头，是这些组件可以被缓存。
这会在后面的HTTP页面请求中减少大量的组件请求。
Expires常用在图片，样式表，脚本等静态文件上。
Max-Age 和 mod_expires

Expires可以控制组件的过期时间，需要提及除了Expires头之外的另一种选择。HTTP1.1引入了Cache-Control头克服Expires头限制。
因为Expires头使用一个特定的时间，它要求服务器和客户端的时钟严格同步。另外，过期日期需要经常检查，并且一旦未来一天到了，这需要在服务器配置中提供一个新的日期。
换一种方式，Cache-Control使用了Max-Age指令指定组件被缓存多久。它意秒为单位。max-age支持HTTP 1.1
APACHE mode_expires模块可以很方便的修改这些配置参数。
如何修订文件名

如果使用了HTTP的缓存策略，即使在服务器上更新了组件，已经访问过网站的用户也不太可能获取最新的组件。
最有效的觉得方案是修改其所有链接，这样，全新的请求将从原始服务器下载最新的内容。
压缩组件

如果HTTP请求产生的响应包很小，传输时间就会减少，因为只需要将很小的包从服务器传递到客户端。这一效果对国内网络明显。
压缩是减少发送请求的最简单也是最有效的方法，很有很多方式参考，取出HTML和脚本的注释，压缩HTML代码。

用户减少文件体积的文件压缩已经在Email应用和FTP站点中使用了10年，同样的技术也可以用于向浏览器发布压缩的Web页面。
从HTTP1.1开始，Web客户端可以通过HTTP请求的Accept-Encodeing头来标示对压缩的支持。
压缩内容的选择

很多网站学选择压缩HTML文档，压缩脚本和样式表也是非常推崇的，一般来讲不会对图片和PDF压缩，因为它们已经压缩过了，如果一定要压缩这些文件只会增加CPU的开销。
gzip是典型的压缩方式，是GUN开发的一种免费格式。可以配置APACHE 1.3的mod_gzip模块来压缩选择的内容，在apache 2.x的mod_deflate模块来压缩。
如果客户端是通过代理缓存来浏览服务器的资源时，可能会存在问题。
比如，请求的浏览器不支持压缩，但是代理缓存支持压缩，服务器最终反馈回来的代码到用户的浏览器可能无法阅读。
将样式表放在顶部

由于组件通常是按照它们在文档中出现的顺序下载的，从而得到一个加载很快的页面。果真如此吗？
IE仍然是最流行的浏览器，实际产生的页面比原来预想的要慢。
进度指示器有3个主要优势：它们让用户知道系统没有崩溃，只是正在为他或她解决问题；它们指出了用户大概还需要等多久，以便用户能够在漫长的等待中做些其他的事情；
最后，它们能够提供用户一些可以看的东西，使得等待不再那么漫长。

将样式表放在文档的底部会导致在浏览器中阻止内容逐步呈现。为避免当样式变化时重绘页面中的元素，浏览器会组织内容逐步呈现。
将脚本(javascript)放在底部

前面介绍了将样式表放在页面的底部会阻碍页面逐步呈现，以及如何通过将其移至文档的HEAD中来解决这一问题。脚本（外部的javascript文件)会引起类似的问题，
但解决方案恰好相反—-最好将脚本从页面的头部移到底部（如果可以的话）。这样页面既可以逐步呈现，也可以提高下载的并行度。
·1将脚本放在页面越靠下的地方，意味着越多的内容能够逐步呈现。
避免CSS表达式

使用外部javascript和 css
严格从一次访问的角度来讲，所有的组件放在一个HTML下载速度是最快的，这样会减少组件的请求数，
 但是考虑到网站的使用频率和服务器的缓存设置，因此可以把css和js打包当做组件放在外部文件中。


http://www.paitoubing.cn/blog/mysql_log

利用mysql log 找到恶意删除的真凶