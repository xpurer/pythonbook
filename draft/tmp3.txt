


大家可以先用SVN检出 http://mayoufour.googlecode.com/svn/trunk/stdyun/ 。

这里是最终项目的代码，可以边学边对比。 

运行它需要配置一些数据库，参见 3.3小节，数据库，ORM 与 单元测试 。

配置完数据库，导入stdyun/mytool/create_table下的tabel.sql，便可以运行。

mysql -u用户名 -p密码 数据库名 < tabel.sql

已经安装过mypy的同学，请用 easy_install -U mypy更新并升级，然后

{{{
python -m mypy.cmd new ppmm
}}}
新建一个项目







utf-8编码的表中每一个定长char需要预备3个字节 ，因为这是可能的最大长度。如果只是英文和数字，可以重定义某一个字段的编码集，来节省空间。

数据库表保持精简，对大文本字段单独建表存储。

这样做有两个好处，

其一，方便配合ORM和Memcache使用，能加快表的读取速度；

其二，将来大文本字段的存储，可以方便切换到分布式的键值数据库。

ORM，是 对象-表 的映射，用它可以简化常见的增删查找代码的编写，提高开发效率。

Memcache，是一个高性能的基于内存的键值缓存，性能优异，使用它可以提高页面的响应速度，同时降低mysql的查询压力。想要更深入的了解memcache可以看看这个手册 page:memcached.pdf 。



多对多 不要级联 数据表 索引表 
理念 把预先能计算的数据先准备好
可以容忍 必要的数据冗余




表小 数据切片


